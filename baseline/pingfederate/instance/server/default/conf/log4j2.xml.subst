<?xml version="1.0" encoding="UTF-8"?>

<!-- ===================================================================== -->
<!--                                                                       -->
<!--  Log4J2 Configuration                                                 -->
<!--                                                                       -->
<!-- ===================================================================== -->

<!--
   | For more configuration information and examples see the Apache Log4j2
   | website: http://logging.apache.org/log4j/2.x/
 -->

<!--
   | Default logging level is set to INFO for most Java packages.
   | INFO log level includes: INFO, WARN and ERROR level messages.
   | On upgrade, the new default log level will take effect, if no custom settings exist.
   | If the log4j2.xml has been customized, the custom settings will be preserved on upgrade.
-->

<!--
   | Due to a bug in Log4J2, there will a message "ERROR appender <Failover-Appender> has no parameter that matches element Failovers" upon startup
   | if Failover Appenders are enabled.  The failover appenders are configured correctly and are functional. Please disregard the error message.
   |
   | monitorInterval - the number of seconds before Log4J2 detects changes to the configuration file and reconfigures itself.
 -->
<Configuration monitorInterval="30" packages="com.pingidentity.log4j.pattern,com.pingidentity.log4j.layout,com.pingidentity.log4j.appender" shutdownHook="disable">
    <Appenders>

        <!-- ============================== -->
        <!-- Append messages to the console -->
        <!-- ============================== -->

        <Console name="CONSOLE" target="SYSTEM_OUT">
            <PatternLayout pattern="%d{ABSOLUTE} %-5p [%c{1}] %m%n" />
        </Console>

        <Console name="CONSOLE-ERROR" target="SYSTEM_ERR">
            <PatternLayout pattern="%d{ABSOLUTE} %-5p [%c{1}] %m%n" />
        </Console>

        <Console name="CONSOLE-PROVISIONER" target="SYSTEM_OUT">
            <PatternLayout
                    pattern="%d{ABSOLUTE} %-5p [%c{1}] %m %x %X{ChannelCode}%n" />
        </Console>

        <!-- ================================= -->
        <!-- Preserve messages in a local file -->
        <!-- ================================= -->

        <!-- Main log : A size based file rolling appender -->
        <RollingFile name="FILE" fileName="${sys:pf.log.dir}/server.log"
                     filePattern="${sys:pf.log.dir}/server.log.%i" ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding.
                <charset>UTF-8</charset> -->
                <pattern>%d %X{trackingid} %-5p [%c] %m%n</pattern>
            </PatternLayout>
            <Policies>
                <SizeBasedTriggeringPolicy
                        size="10000 KB" />
            </Policies>
            <DefaultRolloverStrategy max="5" />
        </RollingFile>

        <!-- SAML Transaction log : A time/date based rolling appender -->
        <RollingFile name="SamlTransaction" fileName="${sys:pf.log.dir}/transaction.log"
                     filePattern="${sys:pf.log.dir}/transaction.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding.
                <charset>UTF-8</charset> -->
                <pattern>%d %m%n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>

        <!-- Security Audit log for Splunk: A time/date based rolling appender

        NOTES:

        You must also uncomment the reference to this appender in one or more of the following loggers
        (under "Loggers" below) before it can be used:

        org.sourceid.websso.profiles.sp.SpAuditLogger (when PingFederate is acting as a Service Provider)
        org.sourceid.websso.profiles.idp.IdpAuditLogger (when PingFederate is acting as an Identity Provider)
        org.sourceid.wstrust.log.STSAuditLogger (when PingFederate is acting as a Security Token Service)
        org.sourceid.websso.profiles.idp.AsAuditLogger (when PingFederate is acting as an OAuth Authorization Server)

        If you want to use UTF-8 encoding instead of system's default encoding add
        the following line to "PatternLayout"
        <charset>UTF-8</charset>
        -->
        <!--
        <RollingFile name="SecurityAudit2Splunk" fileName="${sys:pf.log.dir}/splunk-audit.log"
            filePattern="${sys:pf.log.dir}/splunk-audit.%d{yyyy-MM-dd}.log"
            ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d trackingid=&quot;%X{trackingid}&quot; event=%X{event} subject=&quot;%X{subject}&quot; ip=%X{ip} app=%X{app} connectionid=%X{connectionid} protocol=&quot;%X{protocol}&quot; pfhost=%X{host} role=%X{role} status=%X{status} adapterid=%X{adapterid} description=&quot;%X{description}&quot; responsetime=%X{responsetime} inmessagetype=&quot;%X{inmessagetype}&quot; %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        -->

        <RollingFile name="SecurityAudit2File" fileName="${sys:pf.log.dir}/audit.log"
                     filePattern="${sys:pf.log.dir}/audit.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding. <charset>UTF-8</charset> -->

                <!-- Available fields for ConversionPattern:
                %d - transaction time
                %X{event} - event
                %X{subject} - user name
                %X{ip} - client source IP
                %X{app} - target application URL
                %X{connectionid} - partner ID
                %X{virtualserverid} - virtual server ID
                %X{protocol} - protocol (e.g. SAML20)
                %X{host} - host
                %X{role} - role (IdP, SP)
                %X{status} - the status of the SSO request (success, failure, authn_attempt)
                %X{localuserid} - SP local user ID (available only when account linking is used)
                %X{attributes} - a list of all attributes
                %X{trackingid} - tracking ID which is unique for a user session. It is used for debugging purposes in the server log
                %X{sessiongroupid} - Internal ID for a group of persistent sessions associated with a single browser instance via the PF.PERSISTENT cookie. It is only set if the request has triggered session lookup.
                %X{sri} - The session reference identifier (SRI) for the user, which can be passed to the session revocation API to revoke the user's sessions. It is only set if the request has triggered session lookup.
                %X{pfversion} - PingFederate version
                %X{adapterid} - adapter instance ID(s) that were invoked. You can also use authenticationsourceid (for SP connections) or targetsessionid (for IdP connections) to log adapters and connections that were invoked.
                %X{authenticationsourceid} - This will be the IdP adapter ID(s) or the IdP connection partner entity ID(s) that were invoked in an authentication/logout flow. Multiple authentication sources will appear as an array, i.e. [idpadapter1, idpconn1]
                %X{validatorid} - ID of the Password Credentials Validator used
                %X{targetsessionid} - For IdP connections' browser SSO, this will be the SP adapter ID(s) or the SP connection partner entity ID(s) that were invoked in an authentication/logout flow. Multiple target sessions will appear as an array, i.e. [spadapter1, spconn1]
                %X{description} - description of failure

                %X{assertionid} - ID from Assertion
                %X{initiator} - Who initiated the SAML transaction (e.g.: SP)
                %X{inmessagetype} - high level (protocol) message type
                %X{inresponseto} - the InResponseTo attribute from the Response
                %X{inxmlmsg} - the incoming XML message
                %X{outxmlmsg} - the produced, outgoing XML message
                %X{outurl} - URL where the protocol response was sent. For security, all query parameters and URL fragments are excluded.
                %X{requestid} - ID of the original request
                %X{responseid} - ID of the response

                %X{accessgrantguid} - The GUID of the OAuth Access Grant
                %X{attrackingid} - OAuth Access Token tracking ID. It is used to debug the flow of OAuth access tokens in the audit log and between PingFederate and PingAccess
                %X{granttype} - OAuth grant type(s)

                %X{stspluginid} - ID of the Token Processor / Token Generator used (STS only)

                %X{requeststarttime} - start time of the request (milliseconds since midnight, January 1, 1970 UTC).
                %X{responsetime} - time to process the request, in milliseconds

                %header{a-header-name} - HTTP request header value for the given HTTP request header name
                %parameter{parameter-name} - HTTP request parameter value for the given HTTP request parameter name
                %trackedparameter{parameter-name} - Values for a configured tracked parameter that was stored at the start of the transaction
                -->
                <pattern>%d trackingid=&quot;%X{trackingid}&quot; event=%X{event} subject=&quot;%X{subject}&quot; ip=%X{ip} app=%X{app} connectionid=%X{connectionid} protocol=&quot;%X{protocol}&quot; pfhost=%X{host} role=%X{role} status=%X{status} adapterid=%X{adapterid} description=&quot;%X{description}&quot; responsetime=%X{responsetime} inmessagetype=&quot;%X{inmessagetype}&quot; %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>

        <!-- Admin Audit log : A time/date based rolling appender -->
        <RollingFile name="AdminAudit" fileName="${sys:pf.log.dir}/admin.log"
                     filePattern="${sys:pf.log.dir}/admin.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding.
                <charset>UTF-8</charset> -->
                <pattern>%d | %X{user} | %X{roles} | %X{ip} | %X{component} | %X{event} | %X{eventdetailid} | %m%n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>

        <!-- Admin Event Detail Audit log : A time/date based rolling appender -->
        <RollingFile name="AdminEventDetailAudit" fileName="${sys:pf.log.dir}/admin-event-detail.log"
                     filePattern="${sys:pf.log.dir}/admin-event-detail.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding.
                <charset>UTF-8</charset> -->
                <pattern>%X{eventdetailid} | %X{filename} | %X{delta} | line %X{position} | %m%n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>

        <!-- Admin API Audit log : A time/date based rolling appender -->
        <RollingFile name="AdminApiAudit" fileName="${sys:pf.log.dir}/admin-api.log"
                     filePattern="${sys:pf.log.dir}/admin-api.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding.
                <charset>UTF-8</charset> -->

                <!-- Available fields for ConversionPattern:
                %d - transaction time
                %X{api.user} - API client identifier
                %X{api.authtype} - type of API authentication used
                %X{api.clientip} - client source IP
                %X{api.httpmethod} - HTTP method invoked
                %X{api.url} - URL for the request
                %X{api.status} - HTTP status code for the response
                %X{api.request} - parameters from the request body
                %X{api.response} - parameters from the response body
                -->
                <pattern>%d| %X{api.user}| %X{api.authtype}| %X{api.clientip}| %X{api.httpmethod}| %X{api.url}| %X{api.status} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>

        <!-- Runtime API Audit log : A time/date based rolling appender -->
        <RollingFile name="RuntimeApiAudit" fileName="${sys:pf.log.dir}/runtime-api.log"
                     filePattern="${sys:pf.log.dir}/runtime-api.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding.
                    <charset>UTF-8</charset> -->

                <!-- Available fields for ConversionPattern:
                %d - transaction time
                %X{api.user} - API client identifier
                %X{api.authtype} - type of API authentication used
                %X{api.clientip} - client source IP
                %X{api.httpmethod} - HTTP method invoked
                %X{api.url} - URL for the request
                %X{api.status} - HTTP status code for the response
                %X{api.request} - parameters from the request body
                %X{api.response} - parameters from the response body
                -->
                <pattern>%d| %X{api.user}| %X{api.authtype}| %X{api.clientip}| %X{api.httpmethod}| %X{api.url}| %X{api.status} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>

        <!-- Provisioner log : A time/date based rolling appender -->
        <RollingFile name="ProvisionerLog" fileName="${sys:pf.log.dir}/provisioner.log"
                     filePattern="${sys:pf.log.dir}/provisioner.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <pattern>%d{ABSOLUTE} %-5p [%c{1}] %m %x %X{ChannelCode}%n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>

        <!-- Outbound provisioner audit log: A time/date based rolling appender -->
        <RollingFile name="OutboundProvisionerEventToFile"
                     fileName="${sys:pf.log.dir}/provisioner-audit.log"
                     filePattern="${sys:pf.log.dir}/provisioner-audit.%d{yyyy-MM-dd}.log"
                     ignoreExceptions="false">
            <PatternLayout>
                <!-- Uncomment this if you want to use UTF-8 encoding instead
                    of system's default encoding.
                <charset>UTF-8</charset> -->

                <!-- Available fields for ConversionPattern:
                %d                    - transaction time
                %X{cycle_id}          - Unique Identifier for each provisioning cycle
                %X{channel_id}        - Unique Identifier for Provisioning Channel between source and target
                %X{event_type}        - Type of Provisioning event such as CREATE,UPDATE,etc.,
                %X{source_id}         - Provisioning Source ID
                %X{target_id}         - Provisioning Target ID
                %X{is_success}        - Flag to show whether the event was successful or not. True in case of success, false otherwise.
                %X{non_success_cause} - Description of failure cause
                -->
                <pattern>%d| %X{cycle_id}| %X{channel_id}| %X{event_type}| %X{source_id}| %X{target_id}| %X{is_success}| %X{non_success_cause} %n</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>

       
        
        <Socket name="OutboundProvisionerEventToCEFSyslog" host="${SYSLOG_HOST}" port="${SYSLOG_PORT_PROVISIONER}" protocol="${SYSLOG_PROTOCOL}" ignoreExceptions="false">
            <PingSyslogLayout>
                <PatternLayout>
			<pattern>| %d{MMM dd yyyy HH:mm:ss.SSS}| PingIdentity| PingFederate| ProvisionerLog| %X{pfversion}| %X{event_type}| %X{cycle_id}| %X{channel_id}| %X{event_type}| %X{source_id}| %X{target_id}| %X{is_success}| %X{non_success_cause} %n</pattern>
                </PatternLayout>
            </PingSyslogLayout>
        </Socket>
        <RollingFile name="OutboundProvisionerEventToCEFSyslog-FILE" fileName="${sys:pf.log.dir}/provisioner-audit-cef-syslog-failover.log"
            filePattern="${sys:pf.log.dir}/provisioner-audit-cef-syslog-failover.%d{yyyy-MM-dd}.log" >
            <PatternLayout>
                <pattern>%escape{CEF}{CEF:0|Ping Identity|PingFederate|%X{pfversion}|%X{event_type}|%X{event_type}|0|rt=%d{MMM dd yyyy HH:mm:ss.SSS} cs1Label=Cycle ID cs1=%X{cycle_id} cs2Label=Channel ID cs2=%X{channel_id} cs3Label=Event type cs3=%X{event_type} cs4Label=Source ID cs4=%X{source_id} cs5Label=Target ID cs5=%X{target_id} cs6Label=Was Event Successful cs6=%X{is_success} cs7Label=Failure Cause cs7=%X{non_success_cause} %n}</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingFailover name="OutboundProvisionerEventToCEFSyslog-FAILOVER" primary="OutboundProvisionerEventToCEFSyslog">
            <Failovers>
                <AppenderRef ref="OutboundProvisionerEventToCEFSyslog-FILE" />
            </Failovers>
        </PingFailover>
        

        
        <Socket name="SecurityAuditToCEFSyslog" host="${SYSLOG_HOST}" port="${SYSLOG_PORT_AUDIT}" protocol="${SYSLOG_PROTOCOL}" ignoreExceptions="false">
            <PingSyslogLayout>
                <PatternLayout>
                    <pattern>%d trackingid=&quot;%X{trackingid}&quot; event=%X{event} subject=&quot;%X{subject}&quot; ip=&quot;%X{ip}&quot; app=&quot;%X{app}&quot; connectionid=&quot;%X{connectionid}&quot; protocol=&quot;%X{protocol}&quot; pfhost=&quot;%X{host}&quot; role=&quot;%X{role}&quot; status=&quot;%X{status}&quot; adapterid=&quot;%X{adapterid}&quot; description=&quot;%X{description}&quot; responsetime=&quot;%X{responsetime}&quot; inmessagetype=&quot;%X{inmessagetype}&quot; %n</pattern>
                </PatternLayout>
            </PingSyslogLayout>
        </Socket>
        
        <RollingFile name="SecurityAuditToCEFSyslog-FILE" fileName="${sys:pf.log.dir}/audit-cef-syslog-failover.log"
            filePattern="${sys:pf.log.dir}/audit-cef-syslog-failover.%d{yyyy-MM-dd}.log" >
            <PatternLayout>
                <pattern>%escape{CEF}{CEF:0|Ping Identity|PingFederate|%X{pfversion}|%X{event}|%X{event}|0|rt=%d{MMM dd yyyy HH:mm:ss.SSS} duid=%X{subject} src=%X{ip} msg=%X{status} cs1Label=Target Application URL cs1=%X{app} cs2Label=Connection ID cs2=%X{connectionid} cs3Label=Protocol cs3=%X{protocol} dvchost=%X{host} cs4Label=Role cs4=%X{role} externalId=%X{trackingid} cs5Label=SP Local User ID cs5=%X{localuserid} cs6Label=Attributes cs6=%X{attributes} %n}</pattern>
            </PatternLayout>
            <Policies>
                <TimeBasedTriggeringPolicy />
            </Policies>
        </RollingFile>
        <PingFailover name="SecurityAuditToCEFSyslog-FAILOVER" primary="SecurityAuditToCEFSyslog">
            <Failovers>
                <AppenderRef ref="SecurityAuditToCEFSyslog-FILE" />
            </Failovers>
        </PingFailover>
        
        <Socket name="OutboundSystemLogsToSyslog" host="${SYSLOG_HOST}" port="${SYSLOG_PORT_SYSTEM}" protocol="${SYSLOG_PROTOCOL}" ignoreExceptions="false">
            <PingSyslogLayout>
                <PatternLayout>
                    <pattern>date=&quot;%d{MMM dd yyyy HH:mm:ss.SSS}&quot; trackingid=&quot;%X{trackingid}&quot; loglevel=&quot;%-5p&quot; messagesource=&quot;[%c]&quot; messagedetail=&quot;%m&quot;</pattern>
                </PatternLayout>
            </PingSyslogLayout>
        </Socket>

    </Appenders>

    <Loggers>

        <!-- ================ -->
        <!-- Limit categories -->
        <!-- ================ -->

        <Logger name="org.apache.http.wire" level="INFO" />
        <Logger name="com.pingidentity.pf.email" level="INFO" />
        <Logger name="org.sourceid" level="${PF_LOG_LEVEL}" />
        <Logger name="org.sourceid.saml20.util.SystemUtil" level="INFO" additivity="false">
            <AppenderRef ref="CONSOLE" />
            <AppenderRef ref="FILE" />
        </Logger>
        <Logger name="com.jolbox" level="OFF" />
        <Logger name="com.pingidentity.crypto.CertificateServiceImpl" level="INFO" />
        <!-- Adjust the priority value to DEBUG to get additional logging to help troubleshoot XML Signature problems -->
        <Logger name="org.sourceid.common.dsig" level="INFO" />
        <Logger name="org.sourceid.saml20.domain.mgmt.impl.PluginSupport" level="INFO" />
        <Logger name="com.pingidentity" level="${PF_LOG_LEVEL}" />
        <Logger name="com.pingidentity.common.util.ErrorHandler" level="INFO" additivity="false">
            <AppenderRef ref="CONSOLE" />
            <AppenderRef ref="FILE" />
        </Logger>
        <Logger name="com.pingidentity.appserver.jetty" level="INFO" />
        <Logger name="org.apache" level="INFO" />
        <!-- Limit Jetty -->
        <Logger name="org.eclipse.jetty" level="INFO" />
        <Logger name="org.eclipse.jetty.io.nio" level="ERROR" />
        <Logger name="org.eclipse.jetty.jmx.ObjectMBean" level="ERROR" />
        <Logger name="org.eclipse.jetty.server.session" level="WARN" />
        <Logger name="org.apache.hivemind" level="INFO" />
        <!-- Limit the jgroups category -->
        <Logger name="org.jgroups" level="INFO" />
        <Logger name="com.pingidentity.jgroups.org.jgroups" level="WARN" />
        <Logger name="com.pingidentity.aws" level="INFO" />
        <!-- Limit the Amazon AWS SDK logging -->
        <Logger name="com.amazonaws" level="INFO" />
        <Logger name="com.pingidentity.locale" level="INFO" />
        <Logger name="com.pingidentity.sdk.locale" level="INFO" />
        <Logger name="org.apache.axis" level="INFO" />
        <Logger name="hsqldb.db" level="ERROR" />

        <!-- ================ -->
        <!-- Loggers -->
        <!-- ================ -->

        <AsyncLogger name="org.sourceid.saml20.bindings.BindingLogProxy"
                     level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="SamlTransaction" />
        </AsyncLogger>

        <Logger name="org.sourceid.websso.profiles.sp.SpAuditLogger"
                level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="SecurityAuditToCEFSyslog-FAILOVER"/>
        </Logger>

        <Logger name="org.sourceid.websso.profiles.idp.IdpAuditLogger"
                level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="SecurityAuditToCEFSyslog-FAILOVER"/>

        </Logger>

        <Logger name="org.sourceid.websso.profiles.idp.AsAuditLogger"
                level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="SecurityAuditToCEFSyslog-FAILOVER"/>

        </Logger>

        <Logger name="org.sourceid.websso.profiles.idp.ClientRegistrationAuditLogger"
                level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="SecurityAudit2File" />
            <!--
                <appender-ref ref="SecurityAuditToCEFSyslog-FAILOVER"/>
                <appender-ref ref="SecurityAuditToCEFFile"/>
                <appender-ref ref="SecurityAuditToMySQLDB-FAILOVER"/>
                <appender-ref ref="SecurityAuditToSQLServerDB-FAILOVER"/>
                <appender-ref ref="SecurityAuditToOracleDB-FAILOVER"/>
                <appender-ref ref="SecurityAudit2Splunk"/>
            -->
        </Logger>

        <Logger name="org.sourceid.wstrust.log.STSAuditLogger"
                level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="SecurityAudit2File" />
        </Logger>

        <AsyncLogger name="com.pingidentity.provisioner"
                     level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="ProvisionerLog" />
        </AsyncLogger>

        <Logger name="AuditLogger" level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="AdminAudit" />
        </Logger>

        <Logger name="EventDetailAuditLogger" level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="AdminEventDetailAudit" />
        </Logger>

        <Logger name="AdminApiAuditLogger" level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="AdminApiAudit" />
        </Logger>

        <Logger name="RuntimeApiAuditLogger" level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="RuntimeApiAudit" />
        </Logger>

        <Logger name="ProvisionerAuditLogger" level="INFO" additivity="false" includeLocation="false">
            <appender-ref ref="OutboundProvisionerEventToCEFSyslog-FAILOVER"/>
        </Logger>

        <Logger name="com.pingidentity.appserver.jetty.PingFederateInit" level="ERROR" additivity="false" includeLocation="false">
            <AppenderRef ref="CONSOLE" />
        </Logger>

        <Logger name="org.pingidentity.RunPF" level="ERROR" additivity="false" includeLocation="false">
            <AppenderRef ref="CONSOLE" />
        </Logger>

        <!-- ======================= -->
        <!-- Set up the Root logger -->
        <!-- ======================= -->

        <AsyncRoot level="INFO" includeLocation="false">
            <AppenderRef ref="OutboundSystemLogsToSyslog" />
            <AppenderRef ref="FILE" />
            <AppenderRef ref="CONSOLE" />
        </AsyncRoot>



    </Loggers>

</Configuration>
